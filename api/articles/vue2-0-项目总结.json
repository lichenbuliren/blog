{"title":"vue2.0 项目总结","uid":"be4adf6c48d224b72f46321df687d818","slug":"vue2-0-项目总结","date":"2017-09-21T03:37:37.000Z","updated":"2021-04-06T12:16:41.708Z","comments":true,"path":"api/articles/vue2-0-项目总结.json","cover":"https://heaven-blog-1255884785.file.myqcloud.com/poster-thumbnail.jpg","content":"<h1 id=\"项目架构\"><a href=\"#项目架构\" class=\"headerlink\" title=\"项目架构\"></a>项目架构</h1><h2 id=\"项目目录\"><a href=\"#项目目录\" class=\"headerlink\" title=\"项目目录\"></a>项目目录</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">├── build\n├── config\n├── dist\n│   └── static\n│       ├── css\n│       ├── fonts\n│       ├── images\n│       ├── js\n│       └── lib\n├── src\n│   ├── api\n│   ├── assets\n│   │   ├── global\n│   │   └── images\n│   │       └── footer\n│   ├── components\n│   │   ├── common\n│   │   ├── news\n│   │   └── profile\n│   │       └── charge\n│   ├── config\n│   ├── mixin\n│   ├── router\n│   ├── service\n│   ├── store\n│   └── util\n└── static\n    ├── images\n    └── lib<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>项目目录是采用 <code>vue-cli</code> 自动生成，其它按需自己新建就好了。</p>\n<h2 id=\"开发实践\"><a href=\"#开发实践\" class=\"headerlink\" title=\"开发实践\"></a>开发实践</h2><h3 id=\"动态修改-document-title\"><a href=\"#动态修改-document-title\" class=\"headerlink\" title=\"动态修改 document title\"></a>动态修改 document title</h3><p>在不同的路由页面，我们需要动态的修改文档标题，可以将每个页面的标题配置在路由元信息 <code>meta</code> 里面带上，然后在 <code>router.beforeEach</code> 钩子函数中修改：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Router <span class=\"token keyword\">from</span> <span class=\"token string\">'vue-router'</span><span class=\"token punctuation\">;</span>\n\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>Router<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Router</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  mode<span class=\"token operator\">:</span> <span class=\"token string\">'history'</span><span class=\"token punctuation\">,</span>\n  routes<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">&#123;</span> path<span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> component<span class=\"token operator\">:</span> Index<span class=\"token punctuation\">,</span> meta<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> title<span class=\"token operator\">:</span> <span class=\"token string\">'推荐产品得丰厚奖金'</span> <span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      path<span class=\"token operator\">:</span> <span class=\"token string\">'/news'</span><span class=\"token punctuation\">,</span>\n      component<span class=\"token operator\">:</span> News<span class=\"token punctuation\">,</span>\n      meta<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> title<span class=\"token operator\">:</span> <span class=\"token string\">'公告列表'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      children<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">&#123;</span> path<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> redirect<span class=\"token operator\">:</span> <span class=\"token string\">'list'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#123;</span> path<span class=\"token operator\">:</span> <span class=\"token string\">'list'</span><span class=\"token punctuation\">,</span> component<span class=\"token operator\">:</span> NewsList <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#123;</span> path<span class=\"token operator\">:</span> <span class=\"token string\">'detail/:newsId'</span><span class=\"token punctuation\">,</span> component<span class=\"token operator\">:</span> NewsDetail<span class=\"token punctuation\">,</span> meta<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> title<span class=\"token operator\">:</span> <span class=\"token string\">'公告详情'</span> <span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n      path<span class=\"token operator\">:</span> <span class=\"token string\">'/guide'</span><span class=\"token punctuation\">,</span>\n      component<span class=\"token operator\">:</span> GuideProtocol<span class=\"token punctuation\">,</span>\n      meta<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        title<span class=\"token operator\">:</span> <span class=\"token string\">'新手指南'</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 使用 afterEach 钩子函数，保证路由已经跳转成功之后修改 title</span>\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">afterEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">route</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> documentTitle <span class=\"token operator\">=</span> <span class=\"token string\">'魅族商城会员平台'</span><span class=\"token punctuation\">;</span>\n  route<span class=\"token punctuation\">.</span>matched<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span>meta<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      documentTitle <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> - </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>path<span class=\"token punctuation\">.</span>meta<span class=\"token punctuation\">.</span>title<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> documentTitle<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"Event-Bus-使用场景\"><a href=\"#Event-Bus-使用场景\" class=\"headerlink\" title=\"Event Bus 使用场景\"></a>Event Bus 使用场景</h3><p><img src=\"/images/15047884561558.jpg\" alt=\"\"></p>\n<p>我们在项目中引入了 <code>vuex</code> ，通常情况下是不需要使用 <code>event bus</code> 的，但是有一种情况下我们需要使用它，那就是在路由钩子函数内部的时候，在项目中，我们需要在 <code>beforeEnter</code> 路由钩子里面对外抛出事件。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function-variable function\">beforeEnter</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">to<span class=\"token punctuation\">,</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> userInfo <span class=\"token operator\">=</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span>userFlag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isPrivateMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        EventBus<span class=\"token punctuation\">.</span><span class=\"token function\">$emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'get-localdata-error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在 <code>App.vue</code> 的 <code>mouted</code> 方法中监听这个事件</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">EventBus<span class=\"token punctuation\">.</span><span class=\"token function\">$on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'get-localdata-error'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'请勿使用无痕模式浏览'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"根据-URL-的变化，动态更新数据\"><a href=\"#根据-URL-的变化，动态更新数据\" class=\"headerlink\" title=\"根据 URL 的变化，动态更新数据\"></a>根据 URL 的变化，动态更新数据</h3><p>通常在一个列表集合页，我们需要做分页操作，同时分页数据需要体现在 URL 中，那么如何动态的根据 URL 的变动来动态的获取数据呢，我们可以使用 <code>watch</code> API，在 <code>watch</code> 里面监听 <code>$route</code>，同时使用 <code>this.$router.replace</code> API 来改变 URL 的值。下面是示例代码 <code>common.js</code>：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> qs <span class=\"token keyword\">from</span> <span class=\"token string\">'qs'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n      queryParams<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        currentPage<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        pageSize<span class=\"token operator\">:</span> <span class=\"token number\">10</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">handlePageNoChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>queryParams<span class=\"token punctuation\">.</span>currentPage <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">replaceRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token function\">replaceRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> qs<span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>queryParams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$router<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>location<span class=\"token punctuation\">.</span>pathname<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">?</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>query<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token function\">routeChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">assignParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">fetchData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token function\">assignParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>queryParams <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>queryParams<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$route<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">assignParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">fetchData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  watch<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    $route<span class=\"token operator\">:</span> <span class=\"token string\">'routeChange'</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>我们将这部分代码抽取到一个公共的 <code>mixin</code> 中，在需要的组件那里引入它，同时实现自定义的同名 <code>fetchData()</code> 方法<br><code>mixin</code> API <a href=\"https://cn.vuejs.org/v2/guide/mixins.html\">文档</a>：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> DemoComponent <span class=\"token punctuation\">&#123;</span>\n  mixins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>common<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 组件内部自定义同名查询参数，将会和 mixin 中的默认参数合并</span>\n      queryParams<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        categoryId<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n        pageSize<span class=\"token operator\">:</span> <span class=\"token number\">12</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">fetchData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token comment\">// 发送请求</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"自定义指令实现埋点数据统计\"><a href=\"#自定义指令实现埋点数据统计\" class=\"headerlink\" title=\"自定义指令实现埋点数据统计\"></a>自定义指令实现埋点数据统计</h3><p>在项目中通常需要做数据埋点，这个时候，使用自定义指令将会变非常简单</p>\n<p>在项目入口文件 <code>main.js</code> 中配置我们的自定义指令</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 坑位埋点指令</span>\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">directive</span><span class=\"token punctuation\">(</span><span class=\"token string\">'stat'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">el<span class=\"token punctuation\">,</span> binding</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    el<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> binding<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">let</span> prefix <span class=\"token operator\">=</span> <span class=\"token string\">'store'</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">OS</span><span class=\"token punctuation\">.</span>isAndroid <span class=\"token operator\">||</span> <span class=\"token constant\">OS</span><span class=\"token punctuation\">.</span>isPhone<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        prefix <span class=\"token operator\">=</span> <span class=\"token string\">'mall'</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n      analytics<span class=\"token punctuation\">.</span><span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        ty<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>prefix<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">_</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>data<span class=\"token punctuation\">.</span>type<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n        dc<span class=\"token operator\">:</span> data<span class=\"token punctuation\">.</span>desc <span class=\"token operator\">||</span> <span class=\"token string\">''</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在组件中使用我们的自定义指令</p>\n<p><img src=\"/images/15047890290376.jpg\" alt=\"\"></p>\n<h3 id=\"使用路由拦截统计页面级别的-PV\"><a href=\"#使用路由拦截统计页面级别的-PV\" class=\"headerlink\" title=\"使用路由拦截统计页面级别的 PV\"></a>使用路由拦截统计页面级别的 PV</h3><p>由于第一次在单页应用中尝试数据埋点，在项目上线一个星期之后，数据统计后台发现，首页的 PV、UV 远远高于其它页面，数据很不正常。后来跟数据后台的人沟通询问他们的埋点统计原理之后，才发现其中的问题所在。</p>\n<p><em>传统应用，一般都在页面加载的时候，会有一个异步的 js 加载，就像百度的统计代码类似，所以我们每个页面的加载的时候，都会统计到数据；然而在单页应用，页面加载初始化只有一次，所以其它页面的统计数据需要我们自己手动上报</em></p>\n<p><strong>解决方案</strong></p>\n<p>使用 <code>vue-router</code> 的 <code>beforeEach</code> 或者 <code>afterEach</code> 钩子上报数据，具体使用哪个最好是根据业务逻辑来选择。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">analyticsRequest</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">to<span class=\"token punctuation\">,</span> <span class=\"token keyword\">from</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 只统计页面跳转数据，不统计当前页 query 不同的数据</span>\n  <span class=\"token comment\">// 所以这里只使用了 path, 如果需要统计 query 的，可以使用 to.fullPath</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">.</span>path <span class=\"token operator\">!==</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    analytics<span class=\"token punctuation\">.</span><span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      url<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>location<span class=\"token punctuation\">.</span>protocol<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">//</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>location<span class=\"token punctuation\">.</span>host<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>to<span class=\"token punctuation\">.</span>path<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">to<span class=\"token punctuation\">,</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">.</span>matched<span class=\"token punctuation\">.</span><span class=\"token function\">some</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">record</span> <span class=\"token operator\">=></span> record<span class=\"token punctuation\">.</span>meta<span class=\"token punctuation\">.</span>requiresAuth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 这里做登录等前置逻辑判断</span>\n    <span class=\"token comment\">// 判断通过之后，再上报数据</span>\n    <span class=\"token operator\">...</span>\n    <span class=\"token function\">analyticsRequest</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">,</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 不需要判断的，直接上报数据</span>\n    <span class=\"token function\">analyticsRequest</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">,</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"使用过滤器实现展示信息格式化\"><a href=\"#使用过滤器实现展示信息格式化\" class=\"headerlink\" title=\"使用过滤器实现展示信息格式化\"></a>使用过滤器实现展示信息格式化</h3><p>如下图中奖金数据信息，我们需要将后台返回的奖金格式化为带两位小数点的格式，同时，如果返回的金额是区间类型，需要额外加上 <span style=\"color:red;font-weight: bold;\">起</span> 字和 <span style=\"color:red;font-weight: bold;\">￥</span> 金额符号</p>\n<p><img src=\"/images/15047891835499.jpg\" alt=\"\"></p>\n<p>在入口文件 <code>main.js</code> 中配置我们自定义的过滤器</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">Vue<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token string\">'money'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">,</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> unit<span class=\"token operator\">:</span> <span class=\"token string\">'￥'</span><span class=\"token punctuation\">,</span> fixed<span class=\"token operator\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> moneyStr <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>value<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>moneyStr<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> scope <span class=\"token operator\">=</span> moneyStr<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>config<span class=\"token punctuation\">.</span>unit<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>scope<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>fixed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\"> 起</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>config<span class=\"token punctuation\">.</span>unit<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>moneyStr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>fixed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在组件中使用：</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>price<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>&#123;&#123;detail.priceScope | money&#125;&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">:class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;singleWrapper: isMobile&#125;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>rate<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>比率：&#123;&#123;detail.commissionRateScope&#125;&#125;%<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>income<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>奖金：&#123;&#123;detail.expectedIncome | money&#125;&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"axios-使用配置\"><a href=\"#axios-使用配置\" class=\"headerlink\" title=\"axios 使用配置\"></a>axios 使用配置</h3><p>在项目中，我们使用了 <a href=\"https://github.com/mzabriskie/axios\">axios</a> 做接口请求</p>\n<p>在项目中全局配置 <code>/api/common.js</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">'axios'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> qs <span class=\"token keyword\">from</span> <span class=\"token string\">'qs'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> store <span class=\"token keyword\">from</span> <span class=\"token string\">'../store'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 全局默认配置</span>\n<span class=\"token comment\">// 设置 POST 请求头</span>\naxios<span class=\"token punctuation\">.</span>defaults<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">[</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'application/x-www-form-urlencoded'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 配置 CORS 跨域</span>\naxios<span class=\"token punctuation\">.</span>defaults<span class=\"token punctuation\">.</span>withCredentials <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\naxios<span class=\"token punctuation\">.</span>defaults<span class=\"token punctuation\">.</span>crossDomain <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 请求发起前拦截器</span>\naxios<span class=\"token punctuation\">.</span>interceptors<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">config</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 全局 loading 状态，触发 loading 效果</span>\n  store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'updateLoadingStatus'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    isLoading<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token comment\">// POST 请求参数处理成 axios post 方法所需的格式</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>method <span class=\"token operator\">===</span> <span class=\"token string\">'post'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    config<span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> qs<span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  \n  <span class=\"token comment\">// 这句不能省，不然后面的请求就无法成功发起，因为读不到配置参数</span>\n  <span class=\"token keyword\">return</span> config<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 异常处理</span>\n  store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'updateLoadingStatus'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    isLoading<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 响应拦截</span>\naxios<span class=\"token punctuation\">.</span>interceptors<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 关闭 loading 效果</span>\n  store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'updateLoadingStatus'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    isLoading<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 全局登录过滤，如果没有登录，直接跳转到登录 URL</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>code <span class=\"token operator\">===</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 未登录</span>\n    window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> <span class=\"token function\">getLoginUrl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// 这里返回的 response.data 是被 axios 包装过的一成，所以在这里抽取出来</span>\n  <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'updateLoadingStatus'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    isLoading<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 导出</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> axios<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然后我们在接口中使用就方便很多了 <code>/api/xxx.js</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">'./common'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> baseURL <span class=\"token operator\">=</span> <span class=\"token string\">'/api/profile'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">USER_BASE_INFO</span> <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>baseURL<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">/getUserBaseInfo.json</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">UPDATE_USER_INFO</span> <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>baseURL<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">/saveUserInfo.json</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 更新用户实名认证信息</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">updateUserInfo</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">userinfo</span> <span class=\"token operator\">=></span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token constant\">UPDATE_USER_INFO</span><span class=\"token punctuation\">,</span> userinfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 获取用户基础信息</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getUserBaseInfo</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token constant\">USER_BASE_INFO</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"vuex-状态在响应式页面中的妙用\"><a href=\"#vuex-状态在响应式页面中的妙用\" class=\"headerlink\" title=\"vuex 状态在响应式页面中的妙用\"></a>vuex 状态在响应式页面中的妙用</h3><p>由于项目是响应式页面，PC 端和移动端在表现成有很多不一致的地方，有时候单单通过 CSS 无法实现交互，这个时候，我们的 <code>vuex</code> 状态就派上用场了，</p>\n<p>我们一开始在 <code>App.vue</code> 里面监听了页面的 <code>resize</code> 事件，动态的更新 <code>vuex</code> 里面 <code>isMobile</code> 的状态值</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">window<span class=\"token punctuation\">.</span>onresize <span class=\"token operator\">=</span> <span class=\"token function\">throttle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">updatePlatformStatus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n   isMobile<span class=\"token operator\">:</span> <span class=\"token function\">isMobile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然后，我们在组件层，就能响应式的渲染不同的 <code>dom</code> 结构了。其中最常见的是 PC 端和移动端加载的图片需要不同的规格的，这个时候我们可以这个做</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">loadImgAssets</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> suffix <span class=\"token operator\">=</span> <span class=\"token string\">'.jpg'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">../assets/images/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>name<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isMobile <span class=\"token operator\">?</span> <span class=\"token string\">'-mobile'</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>suffix<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token operator\">&lt;</span>img <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"feed-back\"</span> <span class=\"token operator\">:</span>src<span class=\"token operator\">=</span><span class=\"token string\">\"loadImgAssets('feed-back')\"</span>\n\n<span class=\"token operator\">&lt;</span>img v<span class=\"token operator\">-</span>lazy<span class=\"token operator\">=</span><span class=\"token string\">\"&#123;src: isMobile ? detail.imgUrlMobile : detail.imgUrlPc, loading: placeholder&#125;\"</span><span class=\"token operator\">></span>\n\n<span class=\"token comment\">// 动态渲染不同规格的 dislog</span>\n<span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>dialog <span class=\"token operator\">:</span>visible<span class=\"token punctuation\">.</span>sync<span class=\"token operator\">=</span><span class=\"token string\">\"dialogVisible\"</span> <span class=\"token operator\">:</span>size<span class=\"token operator\">=</span><span class=\"token string\">\"isMobile ? 'full' : 'tiny'\"</span> top<span class=\"token operator\">=</span><span class=\"token string\">\"30%\"</span> custom<span class=\"token operator\">-</span><span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"unCertification-dialog\"</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>dialog<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>等等</p>\n<p><img src=\"/images/15047927923111.jpg\" alt=\"\"></p>\n<p><img src=\"/images/15047928103740.jpg\" alt=\"\"></p>\n<h2 id=\"开发相关配置\"><a href=\"#开发相关配置\" class=\"headerlink\" title=\"开发相关配置\"></a>开发相关配置</h2><h3 id=\"反向代理\"><a href=\"#反向代理\" class=\"headerlink\" title=\"反向代理\"></a>反向代理</h3><p>在项目目录的 <code>config</code> 文件下面的 <code>index.js</code> 配置我们的本地反向代理和端口信息</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">dev<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n  env<span class=\"token operator\">:</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./dev.env'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  port<span class=\"token operator\">:</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span>\n  autoOpenBrowser<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  assetsSubDirectory<span class=\"token operator\">:</span> <span class=\"token string\">'static'</span><span class=\"token punctuation\">,</span>\n  assetsPublicPath<span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n  proxyTable<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">'/api/profile'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      target<span class=\"token operator\">:</span> <span class=\"token string\">'[真实接口地址]:[端口号]'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 例如： http://api.xxx.com</span>\n      changeOrigin<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      pathRewrite<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token string\">'^/api/profile'</span><span class=\"token operator\">:</span> <span class=\"token string\">'/profile'</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token operator\">...</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然后我们调用接口的形式就会变成如下映射，当我们调用 <code>/api/profile/xxxx</code> 的时候，其实是调用了 <code>[真实接口地址]/profile/xxxx</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">/</span>api<span class=\"token operator\">/</span>profile<span class=\"token operator\">/</span><span class=\"token parameter\">xxxx</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>真实接口地址<span class=\"token punctuation\">]</span><span class=\"token operator\">/</span>profile<span class=\"token operator\">/</span>xxxx<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>nginx 配置</strong></p>\n<pre class=\"line-numbers language-nginx\" data-language=\"nginx\"><code class=\"language-nginx\"><span class=\"token keyword\">upstream</span> api<span class=\"token punctuation\">.</span>xxx<span class=\"token punctuation\">.</span>com\n<span class=\"token punctuation\">&#123;</span>\n <span class=\"token comment\">#ip_hash;</span>\n  <span class=\"token keyword\">server</span> <span class=\"token punctuation\">[</span>接口服务器 ip 地址<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span>端口<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">server</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">location</span> <span class=\"token operator\">^</span><span class=\"token operator\">~</span> <span class=\"token operator\">/</span>api<span class=\"token operator\">/</span>profile <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">index</span> <span class=\"token keyword\">index</span><span class=\"token punctuation\">.</span>php <span class=\"token keyword\">index</span><span class=\"token punctuation\">.</span>html <span class=\"token keyword\">index</span><span class=\"token punctuation\">.</span>html<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">proxy_redirect</span> off<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">proxy_set_header</span> Host <span class=\"token variable\">$host</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">proxy_set_header</span> X<span class=\"token operator\">-</span>Real<span class=\"token operator\">-</span>IP <span class=\"token variable\">$remote_addr</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">proxy_set_header</span> X<span class=\"token operator\">-</span>Forwarded<span class=\"token operator\">-</span>For <span class=\"token variable\">$proxy_add_x_forwarded_for</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">proxy_pass</span> <span class=\"token keyword\">http</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>api<span class=\"token punctuation\">.</span>xxx<span class=\"token punctuation\">.</span>com<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">rewrite</span> <span class=\"token operator\">^</span><span class=\"token operator\">/</span>api<span class=\"token operator\">/</span>profile<span class=\"token operator\">/</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>$ <span class=\"token operator\">/</span>profile<span class=\"token operator\">/</span>$<span class=\"token number\">1</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"线上部署\"><a href=\"#线上部署\" class=\"headerlink\" title=\"线上部署\"></a>线上部署</h3><p>如果路由使用的是 <code>history</code> 模式的话，需要在 <code>nginx</code> 里面配置将所有的请求到转发到 <code>index.html</code> 去</p>\n<p>在 <code>nginx.conf</code> 或者对应的站点 <code>vhost</code> 文件下面配置</p>\n<pre class=\"line-numbers language-nginx\" data-language=\"nginx\"><code class=\"language-nginx\"><span class=\"token keyword\">location</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">try_files</span> <span class=\"token variable\">$uri</span> <span class=\"token variable\">$uri</span><span class=\"token operator\">/</span> <span class=\"token operator\">/</span><span class=\"token keyword\">index</span><span class=\"token punctuation\">.</span>html<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"优化\"><a href=\"#优化\" class=\"headerlink\" title=\"优化\"></a>优化</h2><p><strong>开启静态资源长缓存</strong></p>\n<pre class=\"line-numbers language-nginx\" data-language=\"nginx\"><code class=\"language-nginx\"><span class=\"token keyword\">location</span> <span class=\"token operator\">~</span> <span class=\"token punctuation\">.</span><span class=\"token operator\">*</span>\\<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>gif<span class=\"token operator\">|</span>jpg<span class=\"token operator\">|</span>jpeg<span class=\"token operator\">|</span>png<span class=\"token operator\">|</span>bmp<span class=\"token operator\">|</span>swf<span class=\"token operator\">|</span>woff<span class=\"token operator\">|</span>ttf<span class=\"token operator\">|</span>eot<span class=\"token operator\">|</span>svg<span class=\"token punctuation\">)</span>$ <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">expires</span> <span class=\"token number\">1</span>y<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">location</span> <span class=\"token operator\">~</span> <span class=\"token punctuation\">.</span><span class=\"token operator\">*</span>\\<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>js<span class=\"token operator\">|</span>css<span class=\"token punctuation\">)</span>$ <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">expires</span> <span class=\"token number\">1</span>y<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>开启静态资源 gzip 压缩</strong></p>\n<pre class=\"line-numbers language-nginx\" data-language=\"nginx\"><code class=\"language-nginx\"><span class=\"token operator\">/</span><span class=\"token operator\">/</span> 找到 nginx<span class=\"token punctuation\">.</span>conf 配置文件\nvim <span class=\"token operator\">/</span>data<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>conf<span class=\"token operator\">/</span>nginx<span class=\"token punctuation\">.</span>conf\n\n<span class=\"token keyword\">gzip</span> on<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">gzip_min_length</span>  <span class=\"token number\">1</span>k<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">gzip_buffers</span>     <span class=\"token number\">4</span> <span class=\"token number\">8</span>k<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">gzip_http_version</span> <span class=\"token number\">1.1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">gzip_types</span> text<span class=\"token operator\">/</span>plain application<span class=\"token operator\">/</span>javascript application<span class=\"token operator\">/</span>x<span class=\"token operator\">-</span>javascript text<span class=\"token operator\">/</span>javascript text<span class=\"token operator\">/</span>xml text<span class=\"token operator\">/</span>css<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>开启了 gzip 压缩之后，页面资源请求大小将大大减小</p>\n<p><img src=\"/images/15047931938668.jpg\" alt=\"\"></p>\n<h2 id=\"Q-amp-A\"><a href=\"#Q-amp-A\" class=\"headerlink\" title=\"Q&amp;A\"></a>Q&amp;A</h2><p>还有一个小问题，就是在某些浏览器隐私模式下，js 是不具备对 localStorage 写的权限的，这一点在开发的时候需要特别注意下错误的处理。</p>\n","feature":null,"text":"项目架构项目目录├── build ├── config ├── dist │ └── static │ ├── css │ ├── fonts │ ├── images │ ├── js │ └── lib ├── src │ ├── api │ ├── assets │ │ ...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"技术类","slug":"技术类","count":1,"path":"api/categories/技术类.json"}],"tags":[{"name":"总结","slug":"总结","count":1,"path":"api/tags/总结.json"},{"name":"vue","slug":"vue","count":2,"path":"api/tags/vue.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%A1%B9%E7%9B%AE%E6%9E%B6%E6%9E%84\"><span class=\"toc-text\">项目架构</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A1%B9%E7%9B%AE%E7%9B%AE%E5%BD%95\"><span class=\"toc-text\">项目目录</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5\"><span class=\"toc-text\">开发实践</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8A%A8%E6%80%81%E4%BF%AE%E6%94%B9-document-title\"><span class=\"toc-text\">动态修改 document title</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Event-Bus-%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF\"><span class=\"toc-text\">Event Bus 使用场景</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A0%B9%E6%8D%AE-URL-%E7%9A%84%E5%8F%98%E5%8C%96%EF%BC%8C%E5%8A%A8%E6%80%81%E6%9B%B4%E6%96%B0%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">根据 URL 的变化，动态更新数据</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4%E5%AE%9E%E7%8E%B0%E5%9F%8B%E7%82%B9%E6%95%B0%E6%8D%AE%E7%BB%9F%E8%AE%A1\"><span class=\"toc-text\">自定义指令实现埋点数据统计</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E8%B7%AF%E7%94%B1%E6%8B%A6%E6%88%AA%E7%BB%9F%E8%AE%A1%E9%A1%B5%E9%9D%A2%E7%BA%A7%E5%88%AB%E7%9A%84-PV\"><span class=\"toc-text\">使用路由拦截统计页面级别的 PV</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E8%BF%87%E6%BB%A4%E5%99%A8%E5%AE%9E%E7%8E%B0%E5%B1%95%E7%A4%BA%E4%BF%A1%E6%81%AF%E6%A0%BC%E5%BC%8F%E5%8C%96\"><span class=\"toc-text\">使用过滤器实现展示信息格式化</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#axios-%E4%BD%BF%E7%94%A8%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">axios 使用配置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#vuex-%E7%8A%B6%E6%80%81%E5%9C%A8%E5%93%8D%E5%BA%94%E5%BC%8F%E9%A1%B5%E9%9D%A2%E4%B8%AD%E7%9A%84%E5%A6%99%E7%94%A8\"><span class=\"toc-text\">vuex 状态在响应式页面中的妙用</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BC%80%E5%8F%91%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">开发相关配置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86\"><span class=\"toc-text\">反向代理</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BA%BF%E4%B8%8A%E9%83%A8%E7%BD%B2\"><span class=\"toc-text\">线上部署</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">优化</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Q-amp-A\"><span class=\"toc-text\">Q&amp;A</span></a></li></ol></li></ol>","author":{"name":"Heaven","avatar":"https://heaven-blog-1255884785.file.myqcloud.com/github-avatar.jpeg","link":""},"mapped":true,"prev_post":{"title":"CSS GPU Animation: Doing It Right","uid":"4931952b103f0e0f53e02f61f21073ef","slug":"CSS-GPU-Animation-Doing-It-Right","date":"2017-09-22T03:36:43.000Z","updated":"2021-04-06T12:08:05.830Z","comments":true,"path":"api/articles/CSS-GPU-Animation-Doing-It-Right.json","cover":"https://heaven-blog-1255884785.file.myqcloud.com/css-animation.png","text":"CSS GPU Animation: Doing It Right 看完这篇文章收货良多，特地在这里留存下。 原文地址：https://www.smashingmagazine.com/2016/12/gpu-animation-doing-it-right/译文版：https:...","link":"","photos":[],"count_time":{"symbolsCount":"34k","symbolsTime":"31 mins."},"categories":[],"tags":[],"author":{"name":"Heaven","avatar":"https://heaven-blog-1255884785.file.myqcloud.com/github-avatar.jpeg","link":""}},"next_post":{"title":"使用 CANVAS 实现帧动画","uid":"e6706670dc28c3dce80c813a5c86cd7b","slug":"使用CANVAS实现视频动画","date":"2017-07-31T11:38:52.000Z","updated":"2021-04-06T12:16:51.676Z","comments":true,"path":"api/articles/使用CANVAS实现视频动画.json","cover":"https://heaven-blog-1255884785.file.myqcloud.com/poster-thumbnail.jpg","text":"在最近项目中需要实现一个精灵动画，素材方只提供了一个短视频素材，所以在实现精灵动画之前先介绍两个工具来帮助我们更好的实现需求。在这篇文章中，主要是介绍两个命令行工具来实现将一个短视频文件转化成一张 sprite 图片与如何使用 canvas 绘制精灵动画 两个工具官方地址如下： ...","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[{"name":"JavaScript","slug":"JavaScript","count":7,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"原生 JS","slug":"原生-JS","count":1,"path":"api/tags/原生-JS.json"},{"name":"CANVAS","slug":"CANVAS","count":1,"path":"api/tags/CANVAS.json"}],"author":{"name":"Heaven","avatar":"https://heaven-blog-1255884785.file.myqcloud.com/github-avatar.jpeg","link":""}}}