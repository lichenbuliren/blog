{"title":"使用 CANVAS 实现帧动画","uid":"e6706670dc28c3dce80c813a5c86cd7b","slug":"使用CANVAS实现视频动画","date":"2017-07-31T11:38:52.000Z","updated":"2021-04-06T12:16:51.676Z","comments":true,"path":"api/articles/使用CANVAS实现视频动画.json","cover":"https://heaven-blog-1255884785.file.myqcloud.com/poster-thumbnail.jpg","content":"<p>在最近项目中需要实现一个精灵动画，素材方只提供了一个短视频素材，所以在实现精灵动画之前先介绍两个工具来帮助我们更好的实现需求。在这篇文章中，主要是介绍两个命令行工具来实现将一个短视频文件转化成一张 sprite 图片与如何使用 canvas 绘制精灵动画<br><span id=\"more\"></span></p>\n<p>两个工具官方地址如下：</p>\n<ul>\n<li><a href=\"https://www.ffmpeg.org/\">ffmpeg</a></li>\n<li><a href=\"http://www.imagemagick.org/script/montage.php\">montage</a></li>\n</ul>\n<h2 id=\"1、ffmpeg-视频转图片工具\"><a href=\"#1、ffmpeg-视频转图片工具\" class=\"headerlink\" title=\"1、ffmpeg 视频转图片工具\"></a>1、ffmpeg 视频转图片工具</h2><p>ffmpeg 是「一个完整的跨平台解决方案，用于记录，转换和流式传输音频和视频的工具」，它的作用原不止于这篇文章中所介绍的，有兴趣的同学可以自己去官方网站\b了解更多。</p>\n<h3 id=\"基本用法\"><a href=\"#基本用法\" class=\"headerlink\" title=\"基本用法\"></a>基本用法</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">./ffmpeg -i jellyfish.mp4 -vf <span class=\"token assign-left variable\">scale</span><span class=\"token operator\">=</span><span class=\"token number\">138</span>:-1 -r <span class=\"token number\">8</span> %04d.png<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li><code>-i</code> 视频流输入 URL</li>\n<li><code>-vf</code> 创建由过滤器指定的过滤器，并使用它过滤流，过滤器是要应用于流的过滤器的描述，并且必须具有相同类型流的单个输入和单个输出。对应的过滤器参数必须跟在这个之后，不然无法生效</li>\n<li><code>scale</code> 视频缩放，<code>scale=width:height</code> 其中，如果 <code>height=-1</code> ，则表示自适应高度，按照视频的宽高比输出,后面紧接这 <code>scale=width:height,setar=16:9</code> 则可以指定输出宽高比</li>\n<li><code>-r</code> 视频输出 <code>fps</code> 值, 值越大，则以越高的 <code>fps</code> 切片视频，别名 <code>-framerate</code>，比如我们想以 60fps 去裁剪视频导出图片，则使用 <code>-r 60</code></li>\n<li><code>-aspect</code> 视频输出宽高比，比如常用的 <code>4:3</code>、<code>16:9</code> 都是规范的参数用法</li>\n<li><code>-ss</code> 裁剪开始位置，表示从视频的某个时间开始裁剪，是一个非常有用的参数，该参数使用位置放在 <code>-i</code> 前面，参数格式 <code>hh:mm:ss</code> 表示时分秒</li>\n<li><code>-t</code> 持续时间，表示需要裁剪的视频长度，通常配合 <code>-ss</code> 一起使用，就能实现裁剪任意视频时间段的内容了，比如我们需要裁剪 <code>5-10</code> 秒的视频导出，可以这么配合使用 <code>ffmgeg -ss 00:00:05 -t 00:00:10</code></li>\n<li><code>-vframes</code> 设定输出视频帧数，它是 <code>-frames:v</code> 的别名</li>\n<li><code>-qscale:v 2</code> 指定输出图片质量，取值范围<code>2-31</code>，值越大，质量越差，建议取值 <code>2-5</code></li>\n</ul>\n<h3 id=\"综合应用：\"><a href=\"#综合应用：\" class=\"headerlink\" title=\"综合应用：\"></a>综合应用：</h3><pre class=\"line-numbers language-bash、\" data-language=\"bash、\"><code class=\"language-bash、\">&#x2F;&#x2F; 截取 60 秒处的一张图片\nffmpeg -ss 60 -i input.mp4 -qscale:v 2 -vframes 1 output.jpg\n\n&#x2F;&#x2F; 将视频按照 60fps 的速度导出所有图片\nffmpeg -i input.mp4 -r 60 %04d.png<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"2、合并多个图片为一张图片-montage\"><a href=\"#2、合并多个图片为一张图片-montage\" class=\"headerlink\" title=\"2、合并多个图片为一张图片 montage\"></a>2、合并多个图片为一张图片 montage</h2><p>通过上面介绍的工具，我们能很轻易的将一个视频转化为一系列的图片文件，那么这个时候，我们就可以使用 <a href=\"http://www.imagemagick.org/script/montage.php\">montage</a> 工具将前面导出的 n 张图片合并为一张图片</p>\n<h3 id=\"基本用法：\"><a href=\"#基本用法：\" class=\"headerlink\" title=\"基本用法：\"></a>基本用法：</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">montage -border <span class=\"token number\">0</span> -geometry 138x -tile 89x -quality <span class=\"token number\">100</span>% *.png myvideo.jpg<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li><code>-tile</code> 代表需要合并的一行图片数量，当超出这个数字的时候，将换行合并</li>\n<li><code>-quality</code> 代表合成图片质量，取值范围 <code>0 - 100%</code></li>\n</ul>\n<h2 id=\"3、绘制-canvas-精灵动画\"><a href=\"#3、绘制-canvas-精灵动画\" class=\"headerlink\" title=\"3、绘制 canvas 精灵动画\"></a>3、绘制 canvas 精灵动画</h2><p>在开始编辑代码之前，我们整理一下需求：</p>\n<ul>\n<li>动画需要能循环播放</li>\n<li>动画需要能指定从某一帧开始渲染</li>\n<li>指定渲染多少帧动画</li>\n<li>动画需要能控制渲染帧率</li>\n<li>当精灵图片不是单行的时候，要能实现自动换行渲染</li>\n</ul>\n<p>OK，明白了我们的需求之后，我们开始编写代码。先来一个简易的参数合并工具方法</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> _extends <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span>assign <span class=\"token operator\">||</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">target</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> arguments<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> source <span class=\"token operator\">=</span> arguments<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> key <span class=\"token keyword\">in</span> source<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 遍历传入的对象的属性</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 只操作该实例上的属性和方法, 避免循环原型</span>\n        target<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> source<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> target<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>接下来是我们的 canvas 精灵对象</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Sprite</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">canvas<span class=\"token punctuation\">,</span> opts</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> defaults <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    loop<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">// 是否循环播放</span>\n    frameIndex<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">// 当前第几帧</span>\n    startFrameIndex<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 其实渲染位置</span>\n    tickCount<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 每个时间段内计数器</span>\n    ticksPerFrame<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 每个渲染时间段帧数，通过这个来控制动画的渲染速度</span>\n    numberOfFrames<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 动画总帧数</span>\n    numberOfPerLine<span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 每行动画帧数</span>\n    width<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 画布宽度</span>\n    height<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 画屏高度</span>\n    sprite<span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span>  <span class=\"token comment\">// 图片 image 对象</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> params <span class=\"token operator\">=</span> opts <span class=\"token operator\">||</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>canvas <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options <span class=\"token operator\">=</span> <span class=\"token function\">_extends</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> defaults<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'请传入图片对象'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 这里的取 Math.min() 的原因是，在 safari 下面，如果图片的大小超过了画布的大小，那么将不会渲染任何图像</span>\n  <span class=\"token comment\">// 所以在这里，我们去画布和图片中的小者。</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>sprite<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>sprite<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>numberOfPerLine<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>numberOfPerLine <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>numberOfFrames <span class=\"token operator\">||</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">render</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ctx<span class=\"token punctuation\">.</span><span class=\"token function\">clearRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 核心绘制代码，主要使用了 canvas.drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight) API</span>\n  <span class=\"token comment\">// this.options.frameIndex % this.options.numberOfPerLine 每次求余数，判断是否换行</span>\n  <span class=\"token comment\">// Math.floor(this.options.frameIndex / this.options.numberOfPerLine)</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>sprite<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>width <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>frameIndex <span class=\"token operator\">%</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>numberOfPerLine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>height <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>frameIndex <span class=\"token operator\">/</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>numberOfPerLine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">update</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>tickCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 控制帧率的核心部分，在每个绘制时间点，判断当前的计数器是否大于我们传入的值</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>tickCount <span class=\"token operator\">></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>ticksPerFrame<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>tickCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 动画循环判断</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>frameIndex <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>numberOfFrames <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>frameIndex<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>loop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 每次循环都从给定的 startFrameIndex 开始</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>frameIndex <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>startFrameIndex<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>到这里，我们的精灵类基本完成了，接下来看下具体在业务代码中如何使用它</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> spriteCanvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'spriteCanvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nspriteCanvas<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> <span class=\"token number\">138</span><span class=\"token punctuation\">;</span>\nspriteCanvas<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> <span class=\"token number\">308</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> isSpriteLoaded <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> spriteImage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Image</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> sprite<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 这里有个 IE 下的 BUG，如果我们的 sprite 在图片没有加载完全就执行</span>\n<span class=\"token comment\">// 那么在 IE 下面会抛出一个 DOM Exception</span>\n<span class=\"token comment\">// 因此我们将 Sprite 初始化放在了 image.onlaod 回调函数中执行</span>\nsprite<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  sprite <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>spriteCanvas<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    sprite<span class=\"token operator\">:</span> spriteImage<span class=\"token punctuation\">,</span>\n    loop<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    numberOfFrames<span class=\"token operator\">:</span> <span class=\"token number\">92</span><span class=\"token punctuation\">,</span>\n    ticksPerFrame<span class=\"token operator\">:</span> <span class=\"token number\">3</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">spriteAnimate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\nsprite<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">'xxxxx/sprite.jpg'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">spriteAnimate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>spriteAnimate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  sprite<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  sprite<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>文章到这里基本完成了，想要看具体效果的同学，可以去这里查看<br>传送门： <a href=\"https://www.meizu.com/pro7/fenetre/\">水母动画</a>， <a href=\"https://www.meizu.com/pro7/summary/\">蜂鸟动画</a></p>\n<h2 id=\"4、参考资料\"><a href=\"#4、参考资料\" class=\"headerlink\" title=\"4、参考资料\"></a>4、参考资料</h2><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/drawImage\">https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/drawImage</a><br><a href=\"http://www.williammalone.com/articles/create-html5-canvas-javascript-sprite-animation/\">http://www.williammalone.com/articles/create-html5-canvas-javascript-sprite-animation/</a></p>\n","feature":null,"text":"在最近项目中需要实现一个精灵动画，素材方只提供了一个短视频素材，所以在实现精灵动画之前先介绍两个工具来帮助我们更好的实现需求。在这篇文章中，主要是介绍两个命令行工具来实现将一个短视频文件转化成一张 sprite 图片与如何使用 canvas 绘制精灵动画 两个工具官方地址如下： ...","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[{"name":"JavaScript","slug":"JavaScript","count":7,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"原生 JS","slug":"原生-JS","count":1,"path":"api/tags/原生-JS.json"},{"name":"CANVAS","slug":"CANVAS","count":1,"path":"api/tags/CANVAS.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1%E3%80%81ffmpeg-%E8%A7%86%E9%A2%91%E8%BD%AC%E5%9B%BE%E7%89%87%E5%B7%A5%E5%85%B7\"><span class=\"toc-text\">1、ffmpeg 视频转图片工具</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95\"><span class=\"toc-text\">基本用法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%BC%E5%90%88%E5%BA%94%E7%94%A8%EF%BC%9A\"><span class=\"toc-text\">综合应用：</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2%E3%80%81%E5%90%88%E5%B9%B6%E5%A4%9A%E4%B8%AA%E5%9B%BE%E7%89%87%E4%B8%BA%E4%B8%80%E5%BC%A0%E5%9B%BE%E7%89%87-montage\"><span class=\"toc-text\">2、合并多个图片为一张图片 montage</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95%EF%BC%9A\"><span class=\"toc-text\">基本用法：</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3%E3%80%81%E7%BB%98%E5%88%B6-canvas-%E7%B2%BE%E7%81%B5%E5%8A%A8%E7%94%BB\"><span class=\"toc-text\">3、绘制 canvas 精灵动画</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4%E3%80%81%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99\"><span class=\"toc-text\">4、参考资料</span></a></li></ol>","author":{"name":"Heaven","avatar":"https://heaven-blog-1255884785.file.myqcloud.com/github-avatar.jpeg","link":""},"mapped":true,"prev_post":{"title":"vue2.0 项目总结","uid":"be4adf6c48d224b72f46321df687d818","slug":"vue2-0-项目总结","date":"2017-09-21T03:37:37.000Z","updated":"2021-04-06T12:16:41.708Z","comments":true,"path":"api/articles/vue2-0-项目总结.json","cover":"https://heaven-blog-1255884785.file.myqcloud.com/poster-thumbnail.jpg","text":"项目架构项目目录├── build ├── config ├── dist │ └── static │ ├── css │ ├── fonts │ ├── images │ ├── js │ └── lib ├── src │ ├── api │ ├── assets │ │ ...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"技术类","slug":"技术类","count":1,"path":"api/categories/技术类.json"}],"tags":[{"name":"总结","slug":"总结","count":1,"path":"api/tags/总结.json"},{"name":"vue","slug":"vue","count":2,"path":"api/tags/vue.json"}],"author":{"name":"Heaven","avatar":"https://heaven-blog-1255884785.file.myqcloud.com/github-avatar.jpeg","link":""}},"next_post":{"title":"自定义angular2输入组件","uid":"ebefc0122063cc2fea0104d51ae15024","slug":"自定义angular2输入组件","date":"2016-11-24T11:17:44.000Z","updated":"2021-04-06T12:17:28.401Z","comments":true,"path":"api/articles/自定义angular2输入组件.json","cover":"https://heaven-blog-1255884785.file.myqcloud.com/poster-thumbnail.jpg","text":"构建一个自定义 angular2 输入组件今天我们来学习如何正确的构建和一个具有和 &lt;input type=&quot;text&quot;&gt; 同样作用，但同时也具有自己的逻辑的输入组件。 在开始文章之前，在读这篇文章之前，希望你已经把官方的文档和案例都看过至少一遍了...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"JavaScript","slug":"JavaScript","count":7,"path":"api/categories/JavaScript.json"},{"name":"angular2.js","slug":"JavaScript/angular2-js","count":1,"path":"api/categories/JavaScript/angular2-js.json"}],"tags":[{"name":"angular2","slug":"angular2","count":1,"path":"api/tags/angular2.json"}],"author":{"name":"Heaven","avatar":"https://heaven-blog-1255884785.file.myqcloud.com/github-avatar.jpeg","link":""}}}