{"title":"使用 TypeScript 开发小程序最佳实践","uid":"e5113338e0939e903a9a93fc32006e30","slug":"用-Typescript-编写微信小程序","date":"2020-01-28T07:34:33.000Z","updated":"2021-04-06T12:17:20.087Z","comments":true,"path":"api/articles/用-Typescript-编写微信小程序.json","cover":"https://heaven-blog-1255884785.file.myqcloud.com/poster-thumbnail.jpg","content":"<blockquote>\n<p>当微信小程序遇上 Typescript 会碰撞出怎样的火花？该文章将介绍一下如何使用 TS 来提升小程序的开发体验</p>\n</blockquote>\n<p><strong>该文章含有大量示例代码，读者有过小程序开发经验并且对 TypeScript 熟悉最佳</strong></p>\n<p>完整阅读该文章大概需要 10 分钟；</p>\n<h2 id=\"使用-TSLib-精简代码\"><a href=\"#使用-TSLib-精简代码\" class=\"headerlink\" title=\"使用 TSLib 精简代码\"></a>使用 TSLib 精简代码</h2><p>在 TS 中，要像 <code>webpack</code> 中那样使用 <code>babel-runtime</code>，我们只要依赖官方提供的 <a href=\"https://github.com/Microsoft/tslib\">tslib</a> 库；</p>\n<h3 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save tslib<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"修改-tsconfig-json-配置文件\"><a href=\"#修改-tsconfig-json-配置文件\" class=\"headerlink\" title=\"修改 tsconfig.json 配置文件\"></a>修改 <code>tsconfig.json</code> 配置文件</h3><pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token property\">\"importHelpers\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      \t<span class=\"token property\">\"lib\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"es5\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"es2016\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"编译后代码对比\"><a href=\"#编译后代码对比\" class=\"headerlink\" title=\"编译后代码对比\"></a>编译后代码对比</h3><h4 id=\"使用前\"><a href=\"#使用前\" class=\"headerlink\" title=\"使用前\"></a>使用前</h4><pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> __assign <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>__assign<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> Object<span class=\"token punctuation\">.</span>assign <span class=\"token operator\">||</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> s<span class=\"token punctuation\">,</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">=</span> arguments<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        s <span class=\"token operator\">=</span> arguments<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> p <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            t<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> t<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\nexports<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\nexports<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token function\">__assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> exports<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"使用后\"><a href=\"#使用后\" class=\"headerlink\" title=\"使用后\"></a>使用后</h4><pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> tslib_1 <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tslib\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nexports<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\nexports<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> tslib_1<span class=\"token punctuation\">.</span><span class=\"token function\">__assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> exports<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"巧用-TS-的混合申明提升开发体验\"><a href=\"#巧用-TS-的混合申明提升开发体验\" class=\"headerlink\" title=\"巧用 TS 的混合申明提升开发体验\"></a>巧用 TS 的混合申明提升开发体验</h2><p>我们期望的开发体验是：无论是 Page、Component</p>\n<ol>\n<li><p>Class 编写开发体验，就像 React 一样</p>\n</li>\n<li><p>拥有和原生开发体验相同的代码提示</p>\n</li>\n<li>单个页面 Page 只需要 extends 一个基础类就能获得上面两者的开发体验，不需要手动 Page({}) 注册页面或者 Component({}) 注册组件</li>\n</ol>\n<p>要实现这三种开发体验，我们需要利用 TS 特有的<a href=\"https://www.typescriptlang.org/docs/handbook/declaration-merging.html\">声明合并</a>特性：接口与类声明合并；</p>\n<p>其中通过一个接口声明 BasePage 来继承小程序官方的 Page 生命周期、实例方法、实例属性；</p>\n<p>另外通过声明一个 BasePage 的 class 类，在这里我们可以新增各种自定义的类成员变量；</p>\n<p>如此我们就能够通过一个<code>export default class extends BasePage</code> 来编写我们的 Page 页面了；</p>\n<p>通过声明合并的方式，抽象一个基类，只能解决前面两条，要实现第三条，我们还需要利用到 TS 的类装饰器来帮助我们在小程序中注册 Page 页面，详情看后面的拦截器部分；</p>\n<p>接下来我们来看下如何封装基类 <code>BasePage</code> 与 <code>BaseComponent</code></p>\n<h3 id=\"封装-BasePage-基类\"><a href=\"#封装-BasePage-基类\" class=\"headerlink\" title=\"封装 BasePage 基类\"></a>封装 BasePage 基类</h3><p>我们很容易想到 React 继承的 Component 的方式，那么我们也可以通过抽象一个基类 <code>BasePage</code> 来实现第一点的需求；</p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">declare</span> <span class=\"token keyword\">type</span> <span class=\"token class-name\">IAnyObject</span> <span class=\"token operator\">=</span> Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">BasePageProps</span>\n  <span class=\"token keyword\">extends</span> <span class=\"token class-name\">WechatMiniprogram</span><span class=\"token punctuation\">.</span>Page<span class=\"token punctuation\">.</span>InstanceProperties <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">/**\n   * 用来保存 onLoad(options) 传入的参数\n   */</span>\n  options<span class=\"token operator\">:</span> IAnyObject<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/** 页面的初始数据\n   *\n   * `data` 是页面第一次渲染使用的**初始数据**。\n   *\n   * 页面加载时，`data` 将会以`JSON`字符串的形式由逻辑层传至渲染层，因此`data`中的数据必须是可以转成`JSON`的类型：字符串，数字，布尔值，对象，数组。\n   *\n   * 渲染层可以通过 `WXML` 对数据进行绑定。\n   */</span>\n  data<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/** 到当前页面的路径和参数，类型为`String`。最低基础库： `1.2.0` */</span>\n  url<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">BasePage</span>\n  <span class=\"token keyword\">extends</span> <span class=\"token class-name\">WechatMiniprogram</span><span class=\"token punctuation\">.</span>Page<span class=\"token punctuation\">.</span>ILifetime<span class=\"token punctuation\">,</span>\n    WechatMiniprogram<span class=\"token punctuation\">.</span>Page<span class=\"token punctuation\">.</span>InstanceMethods<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    BasePageProps <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 允许其他任意自定义的 class 变量</span>\n  <span class=\"token punctuation\">[</span>x<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BasePage</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">readonly</span> app<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>app <span class=\"token operator\">=</span> <span class=\"token function\">getApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h4><pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">@wxPage\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\"><span class=\"token keyword\">extends</span></span> BasePage <span class=\"token punctuation\">&#123;</span>\n  data<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    abcd<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    color<span class=\"token operator\">:</span> <span class=\"token string\">'green'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token operator\">...</span>\n\n  <span class=\"token function\">onLoad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token operator\">...</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">onShow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token operator\">...</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>具体效果如下图：</p>\n<p><img src=\"/images/wx-code.gif\" style=\"width: 100%\" /></p>\n<p><strong>思考：为啥我们不直接去继承原生的接口声明呢？</strong></p>\n<p>感兴趣的同学可以自己尝试一下，就会明白了。</p>\n<h3 id=\"封装-BaseComponent-基类\"><a href=\"#封装-BaseComponent-基类\" class=\"headerlink\" title=\"封装 BaseComponent 基类\"></a>封装 BaseComponent 基类</h3><p>在编写完 BasePage 基类之后，同样的 BaseComponent 实现起来原理都差不多，我们需要注意的就是需要具体继承哪些声明与属性而已：</p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">BaseComponent</span>\n  <span class=\"token keyword\">extends</span> <span class=\"token class-name\">WechatMiniprogram</span><span class=\"token punctuation\">.</span>Component<span class=\"token punctuation\">.</span>Lifetimes<span class=\"token punctuation\">,</span>\n    WechatMiniprogram<span class=\"token punctuation\">.</span>Component<span class=\"token punctuation\">.</span>OtherOption<span class=\"token punctuation\">,</span>\n    WechatMiniprogram<span class=\"token punctuation\">.</span>Component<span class=\"token punctuation\">.</span>InstanceMethods<span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span>\n  properties<span class=\"token operator\">:</span> WechatMiniprogram<span class=\"token punctuation\">.</span>Component<span class=\"token punctuation\">.</span>PropertyOption<span class=\"token punctuation\">;</span>\n  data<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>\n  methods<span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  $global<span class=\"token operator\">:</span> <span class=\"token builtin\">Function</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">[</span>x<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BaseComponent</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">readonly</span> app<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>\n  $global<span class=\"token operator\">:</span> <span class=\"token builtin\">Function</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>app <span class=\"token operator\">=</span> <span class=\"token function\">getApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 该方法会被注入到 methods 对象中去</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$global <span class=\"token operator\">=</span> $global<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这里涉及的难点主要在于我们需要对微信官方提供的 d.ts 文件非常熟练，作者我也是反复查看官方提供的最新 d.ts 文件，去阅读理解官方 API 的设置</p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseComponent</span> <span class=\"token punctuation\">&#123;</span>\n  data<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    a<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    b<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      c<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n  properties <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    color<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">type</span><span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span>\n      value<span class=\"token operator\">:</span> <span class=\"token string\">'#fff'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n  observers <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 这里首个参数指明 this 的指向，如果不指名，ts 会报错</span>\n    <span class=\"token function\">color</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token operator\">:</span> MyComponent<span class=\"token punctuation\">,</span> newColor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'newColor'</span><span class=\"token punctuation\">,</span> newColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">// 箭头函数方式，this 指向明确</span>\n    <span class=\"token function-variable function\">color2</span><span class=\"token operator\">:</span> val <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'color2'</span><span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 自定义方法，可以在生命周期除 created 之外的方法中访问</span>\n  <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myFunction'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">created</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">attached</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      d<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">ready</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n  methods <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">handleTap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"使用-TS-装饰器对-Page-Component-生命周期拦截注册\"><a href=\"#使用-TS-装饰器对-Page-Component-生命周期拦截注册\" class=\"headerlink\" title=\"使用 TS 装饰器对 Page/Component 生命周期拦截注册\"></a>使用 TS 装饰器对 Page/Component 生命周期拦截注册</h2><h3 id=\"wxPage-小程序-Page-装饰器\"><a href=\"#wxPage-小程序-Page-装饰器\" class=\"headerlink\" title=\"wxPage-小程序 Page 装饰器\"></a>wxPage-小程序 Page 装饰器</h3><p>前面我们通过抽象 Page/Component 的基类 BasePage/BaseComponent，解决了开发体验的问题，接下来我们需要解决的时候，如何优雅的注册我们的 Page/Component;</p>\n<p>我们知道，要注册一个小程序页面或者组件，通常原生的写法是 <code>Page(&#123;xxx&#125;) or Component(&#123;xxx&#125;)</code>，但是我们现在的开发是通过 <code>MyPage extends BasePage</code> 来实现的，如要要注册一个页面，可以通过 <code>Page(MyPage 转 obj)</code> 来实现，但是这么做的话，每个页面都得写一遍这个代码，有点冗余，所以我们需要找一个更加优雅的方式来实现这个问题；</p>\n<p>首先想到的是 TS 的<a href=\"https://www.typescriptlang.org/docs/handbook/decorators.html\">装饰器</a>特性，</p>\n<blockquote>\n<p>装饰器是一种特殊类型的声明，它能够被附加到<a href=\"https://www.tslang.cn/docs/handbook/decorators.html#class-decorators\">类声明</a>，<a href=\"https://www.tslang.cn/docs/handbook/decorators.html#method-decorators\">方法</a>， <a href=\"https://www.tslang.cn/docs/handbook/decorators.html#accessor-decorators\">访问符</a>，<a href=\"https://www.tslang.cn/docs/handbook/decorators.html#property-decorators\">属性</a>或<a href=\"https://www.tslang.cn/docs/handbook/decorators.html#parameter-decorators\">参数</a>上</p>\n</blockquote>\n<p>我们来看下具体的一个<strong>类装饰器</strong>的基本格式：</p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">wxPage</span><span class=\"token punctuation\">(</span>decoratorOptions<span class=\"token operator\">?</span><span class=\"token operator\">:</span> DecoratorOptions<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">constructor</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> BasePage<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">WxPage</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\"><span class=\"token keyword\">constructor</span></span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token operator\">...</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">const</span> current <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WxPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token function\">toObject</span><span class=\"token punctuation\">(</span>current<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">Page</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>其中的 <code>toObject</code> 就是我们将简单的 class 转化为 obj 的一个工具方法，这里我们参考了 <a href=\"https://github.com/qiu8310/minapp/blob/master/packages/minapp-core/src/util/object.ts\">minapp</a> 的实现，感兴趣的同学可以仔细阅读下它的源码；</p>\n<h4 id=\"声明周期的拦截\"><a href=\"#声明周期的拦截\" class=\"headerlink\" title=\"声明周期的拦截\"></a>声明周期的拦截</h4><p>我们的 <code>wxPage</code> 装饰器除了承担注册微信小程序 Page 的任务，我们还可以在这里做一些额外的操作，比如</p>\n<p>Page 的生命周期拦截操作、注入 store 等特性：</p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> BasePage <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../base/basePage'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> toObject <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../../utils/object'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> DecoratorOptions <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../../interface'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> createStoreBindings <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'mobx-miniprogram-bindings'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">wxPage</span><span class=\"token punctuation\">(</span>decoratorOptions<span class=\"token operator\">?</span><span class=\"token operator\">:</span> DecoratorOptions<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">constructor</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> BasePage<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">WxPage</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\"><span class=\"token keyword\">constructor</span></span> <span class=\"token punctuation\">&#123;</span>\n      storeBindings<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>_args<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n\n      <span class=\"token function\">onLoad</span><span class=\"token punctuation\">(</span>options<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n          wxPage<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'wxPage onLoad'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$global</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> storeBindingOptions <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> decoratorOptions <span class=\"token operator\">||</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n  \t\t\t<span class=\"token comment\">// 绑定传入的 store 到当前 Page 对象</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>storeBindingOptions<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> store<span class=\"token punctuation\">,</span> fields<span class=\"token punctuation\">,</span> actions <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> storeBindingOptions<span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>storeBindings <span class=\"token operator\">=</span> <span class=\"token function\">createStoreBindings</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n            store<span class=\"token punctuation\">,</span>\n            fields<span class=\"token punctuation\">,</span>\n            actions<span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span>onLoad <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onLoad</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n\n\t\t\t<span class=\"token comment\">// 重写生命周期函数，可以在这里前后拦截操作</span>\n      <span class=\"token function\">onReady</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span>onReady <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onReady</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n\n      <span class=\"token function\">onShow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span>onShow <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onShow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n\n      <span class=\"token function\">onUnload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>storeBindings <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>storeBindings<span class=\"token punctuation\">.</span><span class=\"token function\">destroyStoreBindings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span>onUnload <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onUnload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">const</span> current <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WxPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token function\">toObject</span><span class=\"token punctuation\">(</span>current<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">Page</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"使用方式-1\"><a href=\"#使用方式-1\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h4><pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> BasePage <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../../core/base/basePage'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> wxPage <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../../core/decorator/index'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> store <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../../store/index'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 这里我们以 mobx 作为数据管理</span>\n<span class=\"token comment\">// 通过装饰器传参，指定要绑定的 store、字段、与 actions</span>\n@<span class=\"token function\">wxPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  storeBindingOptions<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    store<span class=\"token punctuation\">,</span>\n    fields<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'injectA'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'injectB'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    actions<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'updateA'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'updateB'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\"><span class=\"token keyword\">extends</span></span> BasePage <span class=\"token punctuation\">&#123;</span>\n  data<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    abcd<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    color<span class=\"token operator\">:</span> <span class=\"token string\">'green'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token operator\">...</span>\n  \n  <span class=\"token function\">onReady</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 通过装饰器注入的 store 方法</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">updateA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">onLoad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      abc<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        color<span class=\"token operator\">:</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">onShow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>到这里，我们就基本上完成了一个小程序 Page 的 TS 版本开发模式；通过继承一个 <code>BasePage</code>的方式，同时使用<code>wxPage</code>装饰器装饰我们的类，就能完成一个小程序 Page 的注册了；</p>\n<h3 id=\"wxComponent-小程序-Component-装饰器\"><a href=\"#wxComponent-小程序-Component-装饰器\" class=\"headerlink\" title=\"wxComponent-小程序 Component 装饰器\"></a>wxComponent-小程序 Component 装饰器</h3><p>小程序 Component 装饰器的实现原理和 wxPage 类似，不同的地方在于 <code>class =&gt; obj</code> 的时候，需要做一些额外的处理：</p>\n<ul>\n<li>支持生命周期函数以 <code>on</code> + 函数名的方式</li>\n<li>支持自定义的函数，而不用写到 <code>methods</code> 对象里面</li>\n<li>特殊处理 <code>properties</code> 字段，需要判断是对象还是字符串类型，然后进行统一赋值为对象类型</li>\n<li>非生命周期函数自定义的方法，需要重新挂载到 <code>methods</code> 对象上面，不然无法识别自定义方法</li>\n<li>小程序 Component() 初始化的时候，会忽略非官方支持的属性，所以如果是非官方自持的属性，我们需要在组件的 <code>created</code> 生命周期函数中执行绑定操作</li>\n</ul>\n<p>具体样例代码如下：</p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// 将 on 开头的生命周期函数转变成非 on 开头的</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">RAW_LIFE_CYCLES</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Created'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Attached'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Ready'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Moved'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Detached'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">NATIVE_LIFE_CYCLES</span> <span class=\"token operator\">=</span> <span class=\"token constant\">RAW_LIFE_CYCLES</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">=></span> k<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">COMPONENT_NATIVE_PROPS</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token string\">'externalClasses'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'properties'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'data'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'options'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'relations'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'behaviors'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * 将一个普通的 options 对象转化处理为 Component 支持的对象\n * 在这里需要对一些方法进行操作\n * @param options &#123;&#125;\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">toComponent</span><span class=\"token punctuation\">(</span>options<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 处理 properties 属性</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// @ts-ignore</span>\n      <span class=\"token keyword\">let</span> opt<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span> <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 如何不是 Object 类型，则默认指定 type = options.properties[k]；</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isPlainObject</span><span class=\"token punctuation\">(</span>opt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        opt <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">type</span><span class=\"token operator\">:</span> opt <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token comment\">// @ts-ignore</span>\n      options<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> opt<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// 处理自定义的方法和生命周期函数</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>options<span class=\"token punctuation\">.</span>methods<span class=\"token punctuation\">)</span> options<span class=\"token punctuation\">.</span>methods <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> inits<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> PropertyDescriptor <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n  Object<span class=\"token punctuation\">.</span><span class=\"token function\">getOwnPropertyNames</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> desc <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">getOwnPropertyDescriptor</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>desc<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NATIVE_LIFE_CYCLES</span><span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> desc<span class=\"token punctuation\">.</span>value <span class=\"token operator\">===</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 非生命周期函数挂载到 methods 对象上面</span>\n      Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>methods<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">,</span> desc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">delete</span> options<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">COMPONENT_NATIVE_PROPS</span><span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 非函数，也非组件内部属性</span>\n      <span class=\"token comment\">// 由于小程序组件会忽略不能识别的字段，需要这里需要把这些字段配置在组件 created 的时候赋值</span>\n      inits<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> desc<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>inits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> oldCreated <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span>created <span class=\"token keyword\">as</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>\n    options<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">created</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperties</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> inits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// eslint-disable-next-line prefer-rest-params</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>oldCreated<span class=\"token punctuation\">)</span> <span class=\"token function\">oldCreated</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">return</span> options<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">/**\n * 将一个继承了 BaseComponent 的类转化成 小程序 Component 的调用\n * 根据最新的微信 d.ts 描述文件，Component 在实例化的时候，会忽略不支持的自定义属性\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">wxComponent</span><span class=\"token punctuation\">(</span>decoratorOptions<span class=\"token operator\">?</span><span class=\"token operator\">:</span> DecoratorOptions<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">constructor</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> BaseComponent<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">WxComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\"><span class=\"token keyword\">constructor</span></span> <span class=\"token punctuation\">&#123;</span>\n      storeBindings<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>_args<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n\n      <span class=\"token function\">created</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> storeBindingOptions <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> decoratorOptions <span class=\"token operator\">||</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>storeBindingOptions<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> store<span class=\"token punctuation\">,</span> fields<span class=\"token punctuation\">,</span> actions <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> storeBindingOptions<span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>storeBindings <span class=\"token operator\">=</span> <span class=\"token function\">createStoreBindings</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n            store<span class=\"token punctuation\">,</span>\n            fields<span class=\"token punctuation\">,</span>\n            actions<span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span>created <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">created</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n\n      <span class=\"token function\">attached</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span>attached <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">attached</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n\n      <span class=\"token function\">detached</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>storeBindings <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>storeBindings<span class=\"token punctuation\">.</span><span class=\"token function\">destroyStoreBindings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span>detached <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">detached</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">const</span> current <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WxComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">// 这里是与 Page 不一样的地方</span>\n    <span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token function\">toComponent</span><span class=\"token punctuation\">(</span><span class=\"token function\">toObject</span><span class=\"token punctuation\">(</span>current<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">Component</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"使用方式-2\"><a href=\"#使用方式-2\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h4><pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> BaseComponent <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../../../core/base/baseComponent'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> wxComponent <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../../../core/decorator/index'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> store <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../../../store/index'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">wxComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  storeBindingOptions<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    store<span class=\"token punctuation\">,</span>\n    fields<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'injectA'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'injectB'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    actions<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'updateA'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'updateB'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseComponent</span> <span class=\"token punctuation\">&#123;</span>\n  data<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    a<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    b<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      c<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n  properties <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    color<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">type</span><span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span>\n      value<span class=\"token operator\">:</span> <span class=\"token string\">'#fff'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n  observers <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 这里如果非箭头函数，需要显示指明 this 的指向</span>\n    <span class=\"token function\">color</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token operator\">:</span> MyComponent<span class=\"token punctuation\">,</span> newColor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'newColor'</span><span class=\"token punctuation\">,</span> newColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">// 使用箭头函数，this 指向正确</span>\n    <span class=\"token function-variable function\">color2</span><span class=\"token operator\">:</span> val <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'color2'</span><span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 自定义方法，可以在生命周期除 created 之外的方法中访问</span>\n  <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myFunction'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","feature":null,"text":" 当微信小程序遇上 Typescript 会碰撞出怎样的火花？该文章将介绍一下如何使用 TS 来提升小程序的开发体验 该文章含有大量示例代码，读者有过小程序开发经验并且对 TypeScript 熟悉最佳 完整阅读该文章大概需要 10 分钟； 使用 TSLib 精简代码在 TS 中...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"小程序","slug":"小程序","count":1,"path":"api/categories/小程序.json"},{"name":"typescript","slug":"小程序/typescript","count":1,"path":"api/categories/小程序/typescript.json"}],"tags":[{"name":"小程序","slug":"小程序","count":1,"path":"api/tags/小程序.json"},{"name":"typescript","slug":"typescript","count":2,"path":"api/tags/typescript.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8-TSLib-%E7%B2%BE%E7%AE%80%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">使用 TSLib 精简代码</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96\"><span class=\"toc-text\">安装依赖</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9-tsconfig-json-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">修改 tsconfig.json 配置文件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BC%96%E8%AF%91%E5%90%8E%E4%BB%A3%E7%A0%81%E5%AF%B9%E6%AF%94\"><span class=\"toc-text\">编译后代码对比</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E5%89%8D\"><span class=\"toc-text\">使用前</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E5%90%8E\"><span class=\"toc-text\">使用后</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B7%A7%E7%94%A8-TS-%E7%9A%84%E6%B7%B7%E5%90%88%E7%94%B3%E6%98%8E%E6%8F%90%E5%8D%87%E5%BC%80%E5%8F%91%E4%BD%93%E9%AA%8C\"><span class=\"toc-text\">巧用 TS 的混合申明提升开发体验</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B0%81%E8%A3%85-BasePage-%E5%9F%BA%E7%B1%BB\"><span class=\"toc-text\">封装 BasePage 基类</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">使用方式</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B0%81%E8%A3%85-BaseComponent-%E5%9F%BA%E7%B1%BB\"><span class=\"toc-text\">封装 BaseComponent 基类</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8-TS-%E8%A3%85%E9%A5%B0%E5%99%A8%E5%AF%B9-Page-Component-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%8B%A6%E6%88%AA%E6%B3%A8%E5%86%8C\"><span class=\"toc-text\">使用 TS 装饰器对 Page&#x2F;Component 生命周期拦截注册</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#wxPage-%E5%B0%8F%E7%A8%8B%E5%BA%8F-Page-%E8%A3%85%E9%A5%B0%E5%99%A8\"><span class=\"toc-text\">wxPage-小程序 Page 装饰器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A3%B0%E6%98%8E%E5%91%A8%E6%9C%9F%E7%9A%84%E6%8B%A6%E6%88%AA\"><span class=\"toc-text\">声明周期的拦截</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F-1\"><span class=\"toc-text\">使用方式</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#wxComponent-%E5%B0%8F%E7%A8%8B%E5%BA%8F-Component-%E8%A3%85%E9%A5%B0%E5%99%A8\"><span class=\"toc-text\">wxComponent-小程序 Component 装饰器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F-2\"><span class=\"toc-text\">使用方式</span></a></li></ol></li></ol></li></ol>","author":{"name":"Heaven","avatar":"https://heaven-blog-1255884785.file.myqcloud.com/github-avatar.jpeg","link":""},"mapped":true,"prev_post":{"title":"高性能多级多选组件开发","uid":"b96b7a279b1101ad47f9f7bca4cd8e0d","slug":"高性能多级多选组件开发","date":"2020-05-31T12:13:09.000Z","updated":"2021-04-06T12:17:32.059Z","comments":true,"path":"api/articles/高性能多级多选组件开发.json","cover":"https://heaven-blog-1255884785.file.myqcloud.com/poster-thumbnail.jpg","text":" 最近在项目开发过程中，有个一个多级多选的公共组件开发需求，特在这里记录下开发过程中所做的一些优化以及分享一下我是如何从零开发并设计一个组件的思路，希望给阅读这篇文章的读者带来一点收获。 效果预览单个项选中 多个部分项选中 需求分析在拿到需求之后，我们首先要做的是需求分析；通过上...","link":"","photos":[],"count_time":{"symbolsCount":"7k","symbolsTime":"6 mins."},"categories":[],"tags":[{"name":"Typescript","slug":"Typescript","count":1,"path":"api/tags/Typescript.json"},{"name":"React","slug":"React","count":1,"path":"api/tags/React.json"},{"name":"性能","slug":"性能","count":1,"path":"api/tags/性能.json"}],"author":{"name":"Heaven","avatar":"https://heaven-blog-1255884785.file.myqcloud.com/github-avatar.jpeg","link":""}},"next_post":{"title":"小程序插件开发小结","uid":"c00700d4b7ee04c5f2fbc4cd62042e68","slug":"miniprogram-plugin","date":"2019-05-29T02:14:05.000Z","updated":"2021-04-06T12:18:50.819Z","comments":true,"path":"api/articles/miniprogram-plugin.json","cover":"https://heaven-blog-1255884785.file.myqcloud.com/poster-thumbnail.jpg","text":"小程序插件开发小结 本文主要是整理了与总结了一些小程序插件开发相关资料，按顺序阅读按文章即可对小程序插件开发有个基本了解了 基础概念什么是小程序插件 插件是对一组js 接口、自定义组件或页面的封装，用于嵌入到小程序中使用。插件不能独立运行，必须嵌入在其他小程序中才能被用户使用；而...","link":"","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"wechat","slug":"wechat","count":1,"path":"api/categories/wechat.json"}],"tags":[{"name":"javascript","slug":"javascript","count":4,"path":"api/tags/javascript.json"},{"name":"miniprogram","slug":"miniprogram","count":1,"path":"api/tags/miniprogram.json"}],"author":{"name":"Heaven","avatar":"https://heaven-blog-1255884785.file.myqcloud.com/github-avatar.jpeg","link":""}}}