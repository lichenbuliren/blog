{"title":"文件异步上传-下篇","uid":"7092c4b01069ea099d8288e295900109","slug":"文件异步上传-下篇","date":"2016-05-17T06:43:07.000Z","updated":"2021-04-06T12:17:17.109Z","comments":true,"path":"api/articles/文件异步上传-下篇.json","cover":"https://heaven-blog-1255884785.file.myqcloud.com/poster-thumbnail.jpg","content":"<h3 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h3><p>上一篇主要讲了文件异步上传的前端相关的东西，在这篇文章里面，我们主要讲解写使用<code>koa</code>框架来搭建一个简单的处理文件上传的<code>node</code>后台项目。<br><span id=\"more\"></span></p>\n<p>在这里我不会仔细的讲解每个模块中间件的具体使用方法，文章中提到的模块我都会给出链接，有需要的可以自己去看官方的API学习。</p>\n<h3 id=\"主要功能模块\"><a href=\"#主要功能模块\" class=\"headerlink\" title=\"主要功能模块\"></a>主要功能模块</h3><ul>\n<li><a href=\"https://github.com/alexmingoia/koa-router\">koa-router</a> 抽取路由到单独的模块</li>\n<li><a href=\"https://github.com/koajs/static\">koa-static</a> 静态文件服务中间件模块</li>\n<li><a href=\"https://github.com/cojs/busboy\">koa-busboy</a> 文件域处理模块</li>\n</ul>\n<h3 id=\"主要代码\"><a href=\"#主要代码\" class=\"headerlink\" title=\"主要代码\"></a>主要代码</h3><h4 id=\"app-js\"><a href=\"#app-js\" class=\"headerlink\" title=\"app.js\"></a>app.js</h4><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> koa <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> routers <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./routers'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> bodyParser <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa-bodyparser'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> logger <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa-logger'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> staticServer <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa-static'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token function\">koa</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 注册中间件</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">logger</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">staticServer</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span><span class=\"token string\">'public'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">bodyParser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 自定义路由</span>\n<span class=\"token function\">routers</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 监听 3000 端口 </span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span>ctx</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>其中的 routers 为我们自己定义的路由模块，在这个模块里面，我们将配置整个项目的所有路由；</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 配置静态文件目录</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">staticServer</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span><span class=\"token string\">'public'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>在配置了静态文件目录之后，我们在 <code>HTML</code> 文件里面就可以像下面这样引用了</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>css/style.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>js/index.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>HTML5 File Upload<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"主要逻辑代码：routers-index-js\"><a href=\"#主要逻辑代码：routers-index-js\" class=\"headerlink\" title=\"主要逻辑代码：routers/index.js\"></a>主要逻辑代码：routers/index.js</h4><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> router <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'koa-router'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> mime <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mime'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> render <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../lib/render.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 文件上传操作</span>\n<span class=\"token keyword\">var</span> parse <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'co-busboy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">app</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  \n  \t<span class=\"token comment\">// 定义路由</span>\n    router<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/upload'</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>next<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">'upload'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>\n            title<span class=\"token operator\">:</span> <span class=\"token string\">'HTML5 File Upload'</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/upload'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>next<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">var</span> _this <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> parts <span class=\"token operator\">=</span> <span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> part<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">var</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'start'</span><span class=\"token punctuation\">,</span><span class=\"token operator\">+</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>part <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> parts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">var</span> stream <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">createWriteStream</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span><span class=\"token string\">'../public/images'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'/'</span> <span class=\"token operator\">+</span> part<span class=\"token punctuation\">.</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          \n            <span class=\"token comment\">// 这里将 end 设置成 false,然后才能自定义 end 监听事件</span>\n            part<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>end<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n          \t<span class=\"token comment\">// 监听文件流写入完成事件，当 count == 文件个数的时候，表明文件全部上传完毕</span>\n            part<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'end'</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">==</span> parts<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'end'</span><span class=\"token punctuation\">,</span><span class=\"token operator\">+</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    _this<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n                        <span class=\"token string\">\"status\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">200</span>\n                    <span class=\"token punctuation\">&#125;</span>\n                <span class=\"token punctuation\">&#125;</span>\n                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'uploading %s -> %s'</span><span class=\"token punctuation\">,</span> part<span class=\"token punctuation\">.</span>filename<span class=\"token punctuation\">,</span> stream<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  \t<span class=\"token comment\">// 注册路由</span>\n    app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>router<span class=\"token punctuation\">.</span><span class=\"token function\">routes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在这里，我们主要是<code>co-busboy</code> 模块来处理文件域的操作，在拦截到文件表单之后，我们创建了一个科协的流：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">fs<span class=\"token punctuation\">.</span><span class=\"token function\">createWriteStream</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span><span class=\"token string\">'../public/images'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'/'</span> <span class=\"token operator\">+</span> part<span class=\"token punctuation\">.</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>然后通过 <code>part.pipe(stream,&#123;end: false&#125;)</code> 方式写入文件</p>\n<h3 id=\"Q-amp-A\"><a href=\"#Q-amp-A\" class=\"headerlink\" title=\"Q&amp;A\"></a>Q&amp;A</h3><p>基本上的流程大致如此了，过程讲解的不是详细，有什么问题，可以通过下方的联系方式联系我，大家一起学习，一起进步！</p>\n","feature":null,"text":"写在前面上一篇主要讲了文件异步上传的前端相关的东西，在这篇文章里面，我们主要讲解写使用koa框架来搭建一个简单的处理文件上传的node后台项目。 在这里我不会仔细的讲解每个模块中间件的具体使用方法，文章中提到的模块我都会给出链接，有需要的可以自己去看官方的API学习。 主要功能模...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"JavaScript","slug":"JavaScript","count":7,"path":"api/categories/JavaScript.json"},{"name":"nodejs","slug":"JavaScript/nodejs","count":2,"path":"api/categories/JavaScript/nodejs.json"}],"tags":[{"name":"HTML5","slug":"HTML5","count":2,"path":"api/tags/HTML5.json"},{"name":"File Upload","slug":"File-Upload","count":2,"path":"api/tags/File-Upload.json"},{"name":"ajax","slug":"ajax","count":2,"path":"api/tags/ajax.json"},{"name":"nodejs","slug":"nodejs","count":2,"path":"api/tags/nodejs.json"},{"name":"koa","slug":"koa","count":2,"path":"api/tags/koa.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%86%99%E5%9C%A8%E5%89%8D%E9%9D%A2\"><span class=\"toc-text\">写在前面</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%BB%E8%A6%81%E5%8A%9F%E8%83%BD%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">主要功能模块</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%BB%E8%A6%81%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">主要代码</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#app-js\"><span class=\"toc-text\">app.js</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%BB%E8%A6%81%E9%80%BB%E8%BE%91%E4%BB%A3%E7%A0%81%EF%BC%9Arouters-index-js\"><span class=\"toc-text\">主要逻辑代码：routers&#x2F;index.js</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Q-amp-A\"><span class=\"toc-text\">Q&amp;A</span></a></li></ol>","author":{"name":"Heaven","avatar":"https://heaven-blog-1255884785.file.myqcloud.com/github-avatar.jpeg","link":""},"mapped":true,"prev_post":{"title":"使用Vue.js构建单页应用","uid":"1196d4804432f0371741528deb127a90","slug":"使用Vue-js构建单页应用","date":"2016-07-03T12:56:24.000Z","updated":"2021-04-06T12:16:57.623Z","comments":true,"path":"api/articles/使用Vue-js构建单页应用.json","cover":"https://heaven-blog-1255884785.file.myqcloud.com/poster-thumbnail.jpg","text":"前言：在最近学习 Vue.js 的时候，看到国外一篇讲述了如何使用 Vue.js 和 Vuex 来构建一个简单笔记的单页应用的文章。感觉收获挺多，自己在它的例子的基础上进行了一些优化和自定义功能，在这里和大家分享下学习心得。 原文地址：https://coligo.io/lear...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"JavaScript","slug":"JavaScript","count":7,"path":"api/categories/JavaScript.json"},{"name":"Vue.js","slug":"JavaScript/Vue-js","count":1,"path":"api/categories/JavaScript/Vue-js.json"}],"tags":[{"name":"vue","slug":"vue","count":2,"path":"api/tags/vue.json"}],"author":{"name":"Heaven","avatar":"https://heaven-blog-1255884785.file.myqcloud.com/github-avatar.jpeg","link":""}},"next_post":{"title":"文件异步上传-上篇","uid":"4b0289e2cf3d1d421c26226791ccfc96","slug":"文件异步上传-上篇","date":"2016-05-12T08:43:36.000Z","updated":"2021-04-06T12:17:14.938Z","comments":true,"path":"api/articles/文件异步上传-上篇.json","cover":"https://heaven-blog-1255884785.file.myqcloud.com/poster-thumbnail.jpg","text":"项目背景在这篇文章的里面和大家分享下 HTML5 的文件上传操作，后台是我用 nodejs 的koa框架搭建的一个Demo，所在在这篇文章里面，我也会顺带讲讲如何用koa搭建一个简单的node后台。 技术要点 FileReader 用来实现图片预览、FormData 用来实现文件...","link":"","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"JavaScript","slug":"JavaScript","count":7,"path":"api/categories/JavaScript.json"},{"name":"nodejs","slug":"JavaScript/nodejs","count":2,"path":"api/categories/JavaScript/nodejs.json"}],"tags":[{"name":"HTML5","slug":"HTML5","count":2,"path":"api/tags/HTML5.json"},{"name":"File Upload","slug":"File-Upload","count":2,"path":"api/tags/File-Upload.json"},{"name":"ajax","slug":"ajax","count":2,"path":"api/tags/ajax.json"},{"name":"nodejs","slug":"nodejs","count":2,"path":"api/tags/nodejs.json"},{"name":"koa","slug":"koa","count":2,"path":"api/tags/koa.json"}],"author":{"name":"Heaven","avatar":"https://heaven-blog-1255884785.file.myqcloud.com/github-avatar.jpeg","link":""}}}