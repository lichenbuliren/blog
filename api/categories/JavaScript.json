{"name":"JavaScript","slug":"JavaScript","count":7,"postlist":[{"title":"使用 CANVAS 实现帧动画","uid":"e6706670dc28c3dce80c813a5c86cd7b","slug":"使用CANVAS实现视频动画","date":"2017-07-31T11:38:52.000Z","updated":"2021-04-06T12:16:51.676Z","comments":true,"path":"api/articles/使用CANVAS实现视频动画.json","cover":"https://heaven-blog-1255884785.file.myqcloud.com/poster-thumbnail.jpg","text":"在最近项目中需要实现一个精灵动画，素材方只提供了一个短视频素材，所以在实现精灵动画之前先介绍两个工具来帮助我们更好的实现需求。在这篇文章中，主要是介绍两个命令行工具来实现将一个短视频文件转化成一张 sprite 图片与如何使用 canvas 绘制精灵动画 两个工具官方地址如下： ...","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[{"name":"JavaScript","slug":"JavaScript","count":7,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"原生 JS","slug":"原生-JS","count":1,"path":"api/tags/原生-JS.json"},{"name":"CANVAS","slug":"CANVAS","count":1,"path":"api/tags/CANVAS.json"}],"author":{"name":"Heaven","avatar":"https://heaven-blog-1255884785.file.myqcloud.com/github-avatar.jpeg","link":""}},{"title":"放弃jQuery,使用原生JS API","uid":"2a7fc3ea931e1f15434172c955435764","slug":"放弃jQuery,使用原生JS API","date":"2015-09-02T10:31:25.000Z","updated":"2021-04-06T12:17:10.754Z","comments":true,"path":"api/articles/放弃jQuery,使用原生JS API.json","cover":"https://heaven-blog-1255884785.file.myqcloud.com/poster-thumbnail.jpg","text":"1、监听文档加载事件document.addEventListener(\"DOMContentLoaded\", function() &#123; // Code &#125;, false); 2、遍历DOM节点// 获取子元素个数 var childElementCount ...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"JavaScript","slug":"JavaScript","count":7,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"study","slug":"study","count":3,"path":"api/tags/study.json"},{"name":"js","slug":"js","count":2,"path":"api/tags/js.json"}],"author":{"name":"Heaven","avatar":"https://heaven-blog-1255884785.file.myqcloud.com/github-avatar.jpeg","link":""}},{"title":"原生JS Tab组件","uid":"d0777c973bef3c5bade8243839400ef2","slug":"原生JS-Tab组件","date":"2015-09-15T11:31:51.000Z","updated":"2021-04-06T12:17:04.100Z","comments":true,"path":"api/articles/原生JS-Tab组件.json","cover":"https://heaven-blog-1255884785.file.myqcloud.com/poster-thumbnail.jpg","text":"最近在github上面看到一个有意思的项目，名字叫做learnjs，这里会提供一些基础的JS任务，由浅入深的完成一个个项目不同阶段，从而提高个人的编码水平。 好了，回到正题，在这里分享下个人编写的Tab组件这个项目的代码，由于没有使用第三方JS库所以下面的代码中没有去考虑低版本浏...","link":"","photos":[],"count_time":{"symbolsCount":"6k","symbolsTime":"5 mins."},"categories":[{"name":"JavaScript","slug":"JavaScript","count":7,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"原生JS","slug":"原生JS","count":1,"path":"api/tags/原生JS.json"},{"name":"Widget","slug":"Widget","count":1,"path":"api/tags/Widget.json"},{"name":"封装","slug":"封装","count":1,"path":"api/tags/封装.json"}],"author":{"name":"Heaven","avatar":"https://heaven-blog-1255884785.file.myqcloud.com/github-avatar.jpeg","link":""}},{"title":"文件异步上传-上篇","uid":"4b0289e2cf3d1d421c26226791ccfc96","slug":"文件异步上传-上篇","date":"2016-05-12T08:43:36.000Z","updated":"2021-04-06T12:17:14.938Z","comments":true,"path":"api/articles/文件异步上传-上篇.json","cover":"https://heaven-blog-1255884785.file.myqcloud.com/poster-thumbnail.jpg","text":"项目背景在这篇文章的里面和大家分享下 HTML5 的文件上传操作，后台是我用 nodejs 的koa框架搭建的一个Demo，所在在这篇文章里面，我也会顺带讲讲如何用koa搭建一个简单的node后台。 技术要点 FileReader 用来实现图片预览、FormData 用来实现文件...","link":"","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"JavaScript","slug":"JavaScript","count":7,"path":"api/categories/JavaScript.json"},{"name":"nodejs","slug":"JavaScript/nodejs","count":2,"path":"api/categories/JavaScript/nodejs.json"}],"tags":[{"name":"HTML5","slug":"HTML5","count":2,"path":"api/tags/HTML5.json"},{"name":"File Upload","slug":"File-Upload","count":2,"path":"api/tags/File-Upload.json"},{"name":"ajax","slug":"ajax","count":2,"path":"api/tags/ajax.json"},{"name":"nodejs","slug":"nodejs","count":2,"path":"api/tags/nodejs.json"},{"name":"koa","slug":"koa","count":2,"path":"api/tags/koa.json"}],"author":{"name":"Heaven","avatar":"https://heaven-blog-1255884785.file.myqcloud.com/github-avatar.jpeg","link":""}},{"title":"自定义angular2输入组件","uid":"ebefc0122063cc2fea0104d51ae15024","slug":"自定义angular2输入组件","date":"2016-11-24T11:17:44.000Z","updated":"2021-04-06T12:17:28.401Z","comments":true,"path":"api/articles/自定义angular2输入组件.json","cover":"https://heaven-blog-1255884785.file.myqcloud.com/poster-thumbnail.jpg","text":"构建一个自定义 angular2 输入组件今天我们来学习如何正确的构建和一个具有和 &lt;input type=&quot;text&quot;&gt; 同样作用，但同时也具有自己的逻辑的输入组件。 在开始文章之前，在读这篇文章之前，希望你已经把官方的文档和案例都看过至少一遍了...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"JavaScript","slug":"JavaScript","count":7,"path":"api/categories/JavaScript.json"},{"name":"angular2.js","slug":"JavaScript/angular2-js","count":1,"path":"api/categories/JavaScript/angular2-js.json"}],"tags":[{"name":"angular2","slug":"angular2","count":1,"path":"api/tags/angular2.json"}],"author":{"name":"Heaven","avatar":"https://heaven-blog-1255884785.file.myqcloud.com/github-avatar.jpeg","link":""}},{"title":"文件异步上传-下篇","uid":"7092c4b01069ea099d8288e295900109","slug":"文件异步上传-下篇","date":"2016-05-17T06:43:07.000Z","updated":"2021-04-06T12:17:17.109Z","comments":true,"path":"api/articles/文件异步上传-下篇.json","cover":"https://heaven-blog-1255884785.file.myqcloud.com/poster-thumbnail.jpg","text":"写在前面上一篇主要讲了文件异步上传的前端相关的东西，在这篇文章里面，我们主要讲解写使用koa框架来搭建一个简单的处理文件上传的node后台项目。 在这里我不会仔细的讲解每个模块中间件的具体使用方法，文章中提到的模块我都会给出链接，有需要的可以自己去看官方的API学习。 主要功能模...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"JavaScript","slug":"JavaScript","count":7,"path":"api/categories/JavaScript.json"},{"name":"nodejs","slug":"JavaScript/nodejs","count":2,"path":"api/categories/JavaScript/nodejs.json"}],"tags":[{"name":"HTML5","slug":"HTML5","count":2,"path":"api/tags/HTML5.json"},{"name":"File Upload","slug":"File-Upload","count":2,"path":"api/tags/File-Upload.json"},{"name":"ajax","slug":"ajax","count":2,"path":"api/tags/ajax.json"},{"name":"nodejs","slug":"nodejs","count":2,"path":"api/tags/nodejs.json"},{"name":"koa","slug":"koa","count":2,"path":"api/tags/koa.json"}],"author":{"name":"Heaven","avatar":"https://heaven-blog-1255884785.file.myqcloud.com/github-avatar.jpeg","link":""}},{"title":"使用Vue.js构建单页应用","uid":"1196d4804432f0371741528deb127a90","slug":"使用Vue-js构建单页应用","date":"2016-07-03T12:56:24.000Z","updated":"2021-04-06T12:16:57.623Z","comments":true,"path":"api/articles/使用Vue-js构建单页应用.json","cover":"https://heaven-blog-1255884785.file.myqcloud.com/poster-thumbnail.jpg","text":"前言：在最近学习 Vue.js 的时候，看到国外一篇讲述了如何使用 Vue.js 和 Vuex 来构建一个简单笔记的单页应用的文章。感觉收获挺多，自己在它的例子的基础上进行了一些优化和自定义功能，在这里和大家分享下学习心得。 原文地址：https://coligo.io/lear...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"JavaScript","slug":"JavaScript","count":7,"path":"api/categories/JavaScript.json"},{"name":"Vue.js","slug":"JavaScript/Vue-js","count":1,"path":"api/categories/JavaScript/Vue-js.json"}],"tags":[{"name":"vue","slug":"vue","count":2,"path":"api/tags/vue.json"}],"author":{"name":"Heaven","avatar":"https://heaven-blog-1255884785.file.myqcloud.com/github-avatar.jpeg","link":""}}]}